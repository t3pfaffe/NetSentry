version: "2.1"

volumes:
  pihole_config:
  dnsmasq_config:
  unms_config:
  unifi_config:
  unifi_log:
  unifi_log2:
  unifi_run:
  unifi_run2:
  unifi_work:
  tailscale_state:

services:
  pihole:
    build:
      context: ./balena-pihole/pihole
    privileged: true
    container_name: pihole
    restart: unless-stopped
    network_mode: host
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp"
      - "80:80/tcp"
    # environment:
      # - SET_HOSTNAME="pihole"
      # - TZ=${TIME_ZONE:-America/New_York}
    volumes:
      - pihole_config:/etc/pihole
      - dnsmasq_config:/etc/dnsmasq.d

  # https://github.com/balenablocks/hostname
  # https://hub.balena.io/blocks/1918776/hostname-rpi
  hostname:
    image: bh.cr/g_tomas_migone1/hostname-rpi/0.2.1
    restart: no
    labels:
      io.balena.features.supervisor-api: 1
    environment:
      SET_HOSTNAME: pihole

  # https://hub.docker.com/r/tailscale/tailscale
    # https://github.com/tailscale/tailscale/blob/main/cmd/containerboot/main.go
    # https://tailscale.com/kb/1282/docker
    # https://tailscale.com/kb/1278/tailscaled
    # https://tailscale.com/kb/1241/tailscale-up
    # https://tailscale.com/kb/1242/tailscale-serve
    # https://tailscale.com/kb/1311/tailscale-funnel
  tailscale:
    image: tailscale/tailscale:v1.78.3@sha256:9d4c17a8451e2d1282c22aee1f08d28dc106979c39c7b5a35ec6313d4682a43e
    restart: unless-stopped
    environment:
      TS_STATE_DIR: /var/lib/tailscale
      TS_SOCKET: /var/run/tailscale/tailscaled.sock
      TS_AUTHKEY: ${TAILSCALE_AUTHKEY}
      TS_USERSPACE: false
      TS_AUTH_ONCE: false
      TS_HOSTNAME: pihole
      TS_EXTRA_ARGS: --accept-dns=false --reset
    network_mode: host
    cap_add:
      - NET_ADMIN
      - NET_RAW
      - SYS_MODULE
    labels:
      io.balena.features.kernel-modules: 1
    tmpfs:
      - /tmp
      - /run
    volumes:
      - "tailscale_state:/var/lib/tailscale"
    entrypoint:
      - /bin/sh
      - -c
    command:
      - |
        modprobe tun || true
        modprobe wireguard || true
        mkdir -p /dev/net
        [ ! -c /dev/net/tun ] && mknod /dev/net/tun c 10 200
        /usr/local/bin/containerboot


  unifi:
    image: ryansch/unifi-rpi:7.3.76-arm64v8
    container_name: unifi
    restart: unless-stopped
    network_mode: host
    ports:
      - "3478:3478/udp"
      - "5514:5514"
      - "8080:8080"
      - "8443:8443"
      - "8843:8843"
      - "6789:6789"
      - "27117:27117"
      - "1900:1900/udp"
      - "10001:10001/udp"
    environment:
      JAVA_OPTS: -Xmx512M
    volumes:
      - "unifi_config:/var/lib/unifi"
      - "unifi_log:/usr/lib/unifi/logs"
      - "unifi_log2:/var/log/unifi"
      - "unifi_run:/usr/lib/unifi/run"
      - "unifi_run2:/run/unifi"
      - "unifi_work:/usr/lib/unifi/work"

  unms:
    image: nico640/docker-unms:1.4.8
    container_name: unms
    restart: unless-stopped
    ports:
      - "4443:443"
      - "4080:80"
      - "2025:2025/udp"
    environment:
      # - TZ=${TIME_ZONE:-America/New_York}
      # - SECURE_LINK_SECRET=${UNMS_SECLINK_SECRET}
      - PUBLIC_HTTPS_PORT=4443
      - PUBLIC_WS_PORT=4443
    volumes:
      - unms_config:/config
